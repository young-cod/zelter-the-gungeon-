
	<CreateFile>

	@@ 생성하고자 하는 파일이름 지정
	@@ 엑세스 권한 지정(0 / GENERIC_WRITE / GENERIC_READ)
	@@ 파일 공유 모두 지정 NULL 공유 안함(권장)
	@@ 파일의 보안 속성 지정 (차일드 프로세스로 핸들을 상속할 수 있는가의 여부 결정)
	   SECURITY_ATTRIBUTES의 구조체의 포인터
	   NULL 이면 핸들은 상속될 수 없으면 디폴트 보안 설명자가 할당됨
	@@ 파일을 생성할 것인지 열 것인지 지정
	   (CREATE_NEW 파일을 새로 만든다. 이미 존재한다면 에러 리턴)
	   (CREATE_ALWAYS 항상 파일을 새로 만든다. 이미 존재한다면 덮어쓴다(새로생성하고 다시만듬))
	   (OPEN_EXISTING 이미 존재하는 파일을 연다. 없다면 에러 리턴)
	   (OPEN_ALWAYS 무조건 파일을 연다. 없다면 직접 만든 후 파일을 연다)
	@@ 생성할 파일의 속성 또는 기타 속성 지정
	   (FILE_ATTRIBUTE_NORMAL 아무런 속성도 가지지 않는 파일 생성)
	@@ 생성될 파일의 속성을 제공할 템플릿 파일 NULL 권장*/
=================================================================================================================================================================

	<WriteFile>

	@@ hFile					: 기록하고자 하는 파일의 핸들. 이 파일은 GENERIC_WRITE 액세스 권한으로 열어야 한다.
	@@ lpBuffer					: 출력할 데이터를 가진 버퍼
	@@ nNumberOfBytesToWrite	: 기록할 바이트 수를 지정한다. 파이프로 네트웍 전송을 할 때는 65535바이트까지 기록할 수 있다.
	@@ lpNumberOfBytesWritten	: 실제로 기록한 바이트 수를 리턴받기 위한 출력용 인수. WriteFile은 호출 즉시 이 값을 0으로 만든다.
									비동기 입출력을 하지 않을 경우 이 인수는 NULL로 줄 수 없으며 반드시 DWORD형 변수에 대한 포인터를 제공해야 한다.
	@@ lpOverlapped				: 비동기 입출력을 위한 OVERLAPPED 구조체의 포인터.
									파일을 FILE_FLAG_OVERLAPPED 플래그로 열었으면 이 구조체를 반드시 제공해야 한다.
									비동기 입출력을 사용하지 않을 경우 NULL을 주면 된다.*/
=================================================================================================================================================================

	<ReadFile>

	@@ hFile				: 읽고자 하는 파일의 핸들. 이 파일은 GENERIC_READ 액세스 권한으로 열어야 한다.
	@@ lpBuffer				: 읽는 데이터를 저장할 버퍼의 포인터, 충분한 길이를 가지고 있어야 한다.
	@@ nNumberOfBytesToRead : 읽고자 하는 바이트 수
	@@ lpNumberOfBytesRead	: 실제로 읽은 바이트 수를 리턴받기 위한 출력용 인수.
								ReadFile은 호출 즉시 이 값을 0으로 만든다.
								비동기 입출력을 하지 않을 경우 이 인수는 NULL로 줄 수 없으며 반드시 DWORD형 변수에 대한 포인터를 제공해야 한다.
	@@ lpOverlapped			: 비동기 입출력을 위한 OVERLAPPED 구조체의 포인터.
								파일을 FILE_FLAG_OVERLAPPED 플래그로 열었으면 이 구조체를 반드시 제공해야 한다.
								비동기 입출력을 사용하지 않을 경우 NULL을 주면 된다*/